//load mod7
loadi(54,67);
loadi(55,68);

//load idle process
loadi(69,11);
loadi(70,12);

SP = 82 * 512 - 1 ; //STACK FOR BOOT MODULE

call MOD_7; //rest of the bootloader is here

//setting up page table for idle

PTBR = PAGE_TABLE_BASE; //PTBR for idle process
PTLR = 10;  //size of page table

[PTBR+0] = 63; //library
[PTBR+1] = "0100"; //auxillary information
[PTBR+2] = 64;
[PTBR+3] = "0100";
[PTBR+4] = -1; //heap pages
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";
[PTBR+8] = 69; //code pages
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
[PTBR+16] = 81; //stack pages
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

//setting up process table for idle
[PROCESS_TABLE + 1] = 0; //PID
[PROCESS_TABLE + 4] = RUNNING; //state
[PROCESS_TABLE + 11] = 82; //userArea Page
[PROCESS_TABLE + 12] = 0; //KPTR
[PROCESS_TABLE + 13] = 8*512; //UPTR
[PROCESS_TABLE + 14] = PTBR;
[PROCESS_TABLE + 15] = PTLR;

[81*512] = [69*512 + 1]; //stack hold the ip address of the next instructions of idle process

SP = 8 * 512;

//setting system status table of init
[SYSTEM_STATUS_TABLE + 1] = 0;
[SYSTEM_STATUS_TABLE + 2] = 42; // mem free count
[SYSTEM_STATUS_TABLE + 3] = 0; // mem wait count


ireturn; //go to the instruction in unprivileged mode
