[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 21;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;

alias userSP R0;
userSP = SP;

SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;

//shutdown can only be invoked by shell process by root user
//check whether its shell process i.e pid = 1
//check whether its root user i.e userid = 1
if (([SYSTEM_STATUS_TABLE + 1] != 1) || ([PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 3] != 1)) then
 [[PTBR + ((userSP - 1) / 512) * 2] * 512 + ((userSP - 1) % 512)] = -1; //failure
 [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
 SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];
 ireturn;
endif;

//copy changes made to fake to real to commit the changes
//call disk store for the same

//inode + user
multipush(R0);
 R1 = 1;
 R2 = [SYSTEM_STATUS_TABLE + 1];
 R3 = 59;
 R4 = 3;
 call MOD_4;
multipop(R0);

multipush(R0);
 R1 = 1;
 R2 = [SYSTEM_STATUS_TABLE + 1];
 R3 = 60;
 R4 = 4;
 call MOD_4;
multipop(R0);

//root file
multipush(R0);
 R1 = 1;
 R2 = [SYSTEM_STATUS_TABLE + 1];
 R3 = 62;
 R4 = 5;
 call MOD_4;
multipop(R0);

//disk free list
multipush(R0);
 R1 = 1;
 R2 = [SYSTEM_STATUS_TABLE + 1];
 R3 = 61;
 R4 = 2;
 call MOD_4;
multipop(R0);


halt;
